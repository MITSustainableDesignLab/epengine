Parameters:
  App:
    Type: String
    Description: Your application's name.
  Env:
    Type: String
    Description: The name of the environment being deployed.
  # Customize your Aurora Serverless cluster by setting the default value of the following parameters.
  hatchetdbDBName:
    Type: String
    Description: The name of the initial database to be created in the Aurora Serverless v2 cluster.
    Default: hatchet
    # Cannot have special characters
    # Naming constraints: https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints
  hatchetdbPostgresPort:
    Type: Number
    Description: The port to connect to the Aurora Serverless v2 cluster.
    Default: 5432
  VPCID:
    Type: String
    Description: The ID of the VPC in which to create the Aurora Serverless v2 cluster.
    Default: ""
  PrivateSubnets:
    Type: String
    Description: The IDs of the private subnets in which to create the Aurora Serverless v2 cluster.
    Default: ""

Mappings:
  hatchetdbEnvScalingConfigurationMap: 
    prod:
      "DBMinCapacity": 0.5 # AllowedValues: from 0.5 through 128
      "DBMaxCapacity": 8   # AllowedValues: from 0.5 through 128
    
    All:
      "DBMinCapacity": 0.5 # AllowedValues: from 0.5 through 128
      "DBMaxCapacity": 8   # AllowedValues: from 0.5 through 128

Resources:
  hatchetdbDBSubnetGroup:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties:
      DBSubnetGroupDescription: Group of private subnets for Aurora Serverless v2 cluster.
      SubnetIds:
        !Split [',', !Ref PrivateSubnets]
  
  hatchetdbWorkloadSecurityGroup:
    Metadata:
      'aws:copilot:description': 'A security group for one or more workloads to access the Aurora Serverless v2 cluster hatchetdb'
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'The Security Group to access Aurora Serverless v2 cluster hatchetdb.'
      VpcId: !Ref VPCID
      Tags:
        - Key: Name
          Value: !Sub 'copilot-${App}-${Env}-Aurora'

  hatchetdbDBClusterSecurityGroup:
    Metadata:
      'aws:copilot:description': 'A security group for your Aurora Serverless v2 cluster hatchetdb'
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: The Security Group for the Aurora Serverless v2 cluster.
      VpcId: !Ref VPCID
      Tags:
        - Key: Name
          Value: !Sub 'copilot-${App}-${Env}-Aurora'
  
  hatchetdbDBClusterSecurityGroupIngressFromWorkload:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Ingress from one or more workloads in the environment.
      GroupId: !Ref hatchetdbDBClusterSecurityGroup
      IpProtocol: tcp
      ToPort: !Ref hatchetdbPostgresPort
      FromPort: !Ref hatchetdbPostgresPort
      SourceSecurityGroupId: !Ref hatchetdbWorkloadSecurityGroup
  
  hatchetdbAuroraSecret:
    Metadata:
      'aws:copilot:description': 'A Secrets Manager secret to store your DB credentials'
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: !Sub Aurora main user secret for ${AWS::StackName}
      GenerateSecretString:
        SecretStringTemplate: '{"username": "postgres"}'
        GenerateStringKey: "password"
        ExcludePunctuation: true
        IncludeSpace: false
        PasswordLength: 16

  hatchetdbDBClusterParameterGroup:
    Metadata:
      'aws:copilot:description': 'A DB parameter group for engine configuration values'
    Type: 'AWS::RDS::DBClusterParameterGroup'
    Properties:
      Description: !Ref 'AWS::StackName'
      Family: 'aurora-postgresql15'
      Parameters:
        client_encoding: 'UTF8'
  
  hatchetdbDBCluster:
    Metadata:
      'aws:copilot:description': 'The hatchetdb Aurora Serverless v2 database cluster'
    Type: 'AWS::RDS::DBCluster'
    Properties:
      MasterUsername:
        !Join [ "",  [ '{{resolve:secretsmanager:', !Ref hatchetdbAuroraSecret, ":SecretString:username}}" ]]
      MasterUserPassword:
        !Join [ "",  [ '{{resolve:secretsmanager:', !Ref hatchetdbAuroraSecret, ":SecretString:password}}" ]]
      DatabaseName: !Ref hatchetdbDBName
      Engine: 'aurora-postgresql'
      EngineVersion: '15.6'
      DBClusterParameterGroupName: !Ref hatchetdbDBClusterParameterGroup
      DBSubnetGroupName: !Ref hatchetdbDBSubnetGroup
      Port: !Ref hatchetdbPostgresPort
      VpcSecurityGroupIds:
        - !Ref hatchetdbDBClusterSecurityGroup
      ServerlessV2ScalingConfiguration:
        # Replace "All" below with "!Ref Env" to set different autoscaling limits per environment.
        MinCapacity: !FindInMap [hatchetdbEnvScalingConfigurationMap, All, DBMinCapacity]
        MaxCapacity: !FindInMap [hatchetdbEnvScalingConfigurationMap, All, DBMaxCapacity]
    
  
  hatchetdbDBWriterInstance:
    Metadata:
      'aws:copilot:description': 'The hatchetdb Aurora Serverless v2 writer instance'
    Type: 'AWS::RDS::DBInstance'
    Properties:
      DBClusterIdentifier: !Ref hatchetdbDBCluster
      DBInstanceClass: db.serverless
      Engine: 'aurora-postgresql'
      PromotionTier: 1
      AvailabilityZone: !Select
        - 0
        - !GetAZs
          Ref: AWS::Region

  hatchetdbSecretAuroraClusterAttachment:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId: !Ref hatchetdbAuroraSecret
      TargetId: !Ref hatchetdbDBCluster
      TargetType: AWS::RDS::DBCluster
  
   
  # create a new secret which stores the entire connection string
  hatchetdbConnectionStringSecret:
    Metadata:
      'aws:copilot:description': 'A Secrets Manager secret to store the connection string to the Aurora Serverless v2 cluster'
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: !Sub Connection string to the Aurora Serverless v2 cluster ${AWS::StackName}
      SecretString: !Sub
        - 'postgresql://{{resolve:secretsmanager:${hatchetdbAuroraSecret}:SecretString:username}}:{{resolve:secretsmanager:${hatchetdbAuroraSecret}:SecretString:password}}@${host}:${hatchetdbPostgresPort}/${hatchetdbDBName}'
        - host: !GetAtt hatchetdbDBCluster.Endpoint.Address

  hatchetdbPasswordSecret:
    Metadata:
      'aws:copilot:description': 'A Secrets Manager secret to store the password to the Aurora Serverless v2 cluster'
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: !Sub Password to the Aurora Serverless v2 cluster ${AWS::StackName}
      SecretString: !Sub '{{resolve:secretsmanager:${hatchetdbAuroraSecret}:SecretString:password}}'
    
Outputs:
  hatchetdbSecret:
    Description: "The JSON secret that holds the database username and password. Fields are 'host', 'port', 'dbname', 'username', 'password', 'dbClusterIdentifier' and 'engine'"
    Value: !Ref hatchetdbAuroraSecret
    Export:
      Name: !Sub ${App}-${Env}-hatchetdbSecret

  hatchetdbSecurityGroup:
    Description: "The security group to attach to the workload."
    Value: !Ref hatchetdbWorkloadSecurityGroup  
    Export:
      Name: !Sub ${App}-${Env}-hatchetdbSecurityGroup

  hatchetdbConnectionStringSecret:
    Description: "The secret that holds the connection string to the Aurora Serverless v2 cluster."
    Value: !Ref hatchetdbConnectionStringSecret
    Export:
      Name: !Sub ${App}-${Env}-hatchetdbConnectionStringSecret
    

  hatchetdbPort:
    Description: "The port to connect to the Aurora Serverless v2 cluster."
    Value: !Ref hatchetdbPostgresPort
    Export:
      Name: !Sub ${App}-${Env}-hatchetdbPort
  
  hatchetdbHost:
    Description: "The host to connect to the Aurora Serverless v2 cluster."
    Value: !GetAtt hatchetdbDBCluster.Endpoint.Address
    Export:
      Name: !Sub ${App}-${Env}-hatchetdbHost
  
  hatchetdbUsername:
    Description: "The username to connect to the Aurora Serverless v2 cluster."
    # TODO: this should be dynamically referenced
    Value: postgres
    Export:
      Name: !Sub ${App}-${Env}-hatchetdbUsername
  
  hatchetdbPassword:
    Description: "The password to connect to the Aurora Serverless v2 cluster."
    Value: !Ref hatchetdbPasswordSecret
    Export:
      Name: !Sub ${App}-${Env}-hatchetdbPassword
  
  hatchetdbDBName:
    Description: "The name of the initial database to be created in the Aurora Serverless v2 cluster."
    Value: !Ref hatchetdbDBName
    Export:
      Name: !Sub ${App}-${Env}-hatchetdbDBName

